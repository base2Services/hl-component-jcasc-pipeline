bucket_name: jcasc-${EnvironmentName}-${AWS::Region}-${AWS::AccountId}

image: ghcr.io/base2services/jenkins-distribution
tag: lts

buildspec:
  version: 0.2
  phases:
    build:
      commands:
        - jcasc-apply --jcasc-yaml jenkins.yaml --s3-bucket $BUCKET --s3-prefix $ENVIRONMENT_NAME --jenkins-url $JENKINS_URL

trigger_iam_policies:
  CloudWatchEventPolicy:
    action:
      - codepipeline:StartPipelineExecution
    resource:
      - Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}

codebuild_iam_policies:
  logs:
    action:
      - logs:CreateLogStream
      - logs:PutLogEvents
  s3-object:
    action:
      - s3:GetObject
      - s3:PutObject
      - s3:ListBucket
    resource:
      - Fn::Sub: arn:aws:s3:::${Bucket}/*
  s3-bucket:
    action:
      - s3:ListBucket
      - s3:GetBucketLocation
    resource:
      - Fn::Sub: arn:aws:s3:::${Bucket}
  vpc-access:
    action:
      - ec2:CreateNetworkInterface
      - ec2:DescribeDhcpOptions
      - ec2:DescribeNetworkInterfaces
      - ec2:DeleteNetworkInterface
      - ec2:DescribeSubnets
      - ec2:DescribeSecurityGroups
      - ec2:DescribeVpcs
      - ec2:CreateNetworkInterfacePermission
  secret-manager:
    action:
      - secretsmanager:GetSecretValue
    resource:
      - Ref: JcascReloadToken

codepipeline_iam_policies:
  codecommit:
    action:
      - codecommit:GetBranch
      - codecommit:GetCommit
      - codecommit:UploadArchive
      - codecommit:GetUploadArchiveStatus
      - codecommit:CancelUploadArchive
    resource:
      - Fn::GetAtt: Repository.Arn
  codebuild:
    action:
      - codebuild:BatchGetBuilds
      - codebuild:StartBuild
    resource:
      - Fn::GetAtt: Build.Arn
  s3:
    action:
      - s3:GetObject
      - s3:PutObject
    resource:
      - Fn::Sub: arn:aws:s3:::${Bucket}/*

repository_seeder_custom_resources:
  custom_policies:
    codecommit:
      action:
        - codecommit:CreateCommit
      resource:
        - Fn::GetAtt: [Repository,Arn]
  roles:
    RepositorySeederCustomResource:
      policies_inline:
        - cloudwatch-logs
        - codecommit
  functions:
    RepositorySeederCR:
      code: repository-seeder
      handler: app.lambda_handler
      runtime: python3.7
      timeout: 5
      role: RepositorySeederCustomResource
      package_cmd: 'pip install -r requirements.txt -t .'