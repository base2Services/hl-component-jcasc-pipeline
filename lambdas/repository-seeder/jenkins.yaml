---
jenkins:
  clouds:
  - amazonEC2:
      cloudName: "linux"
      instanceCapStr: "1"
      sshKeysCredentialsId: ciinabox-agent-key
      region: "{{ciinabox::region}}"
      templates:
      - ami: "${/ciinabox/{{ciinabox::name}}/agent/linux/ami}"
        amiType:
          unixData:
            sshPort: "22"
        associatePublicIp: false
        connectBySSHProcess: false
        connectionStrategy: PRIVATE_IP
        deleteRootOnTermination: true
        description: "Linux Agent"
        ebsOptimized: false
        hostKeyVerificationStrategy: 'OFF'
        iamInstanceProfile: "${/ciinabox/{{ciinabox::name}}/agent/iam}"
        idleTerminationMinutes: "30"
        instanceCapStr: "2"
        labelString: "linux docker"
        launchTimeoutStr: "300"
        maxTotalUses: -1
        minimumNumberOfInstances: 0
        mode: NORMAL
        monitoring: false
        numExecutors: 8
        remoteAdmin: "ec2-user"
        remoteFS: "/home/ec2-user"
        securityGroups: "${/ciinabox/{{ciinabox::name}}/agent/securitygroup}"
        spotConfig:
          fallbackToOndemand: true
        stopOnTerminate: false
        subnetId: "${/ciinabox/{{ciinabox::name}}/agent/subnets}"
        t2Unlimited: false
        tags:
        - name: "Name"
          value: "ciinabox-agent-linux"
        type: T3Nano
        useEphemeralDevices: false
      useInstanceProfileForCredentials: false
credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          id: ciinabox-agent-key
          scope: GLOBAL
          description: ciinabox agent keypair
          username: ec2-user
          privateKeySource:
            directEntry:
              privateKey: "${/ciinabox/keypair/{{ciinabox::name}}}"
unclassified:
  location:
    url: "{{ciinabox::url}}"
  globalLibraries:
    libraries:
    - defaultVersion: "master"
      name: "ciinabox"
      retriever:
        modernSCM:
          scm:
            github:
              repoOwner: "base2services"
              repository: "ciinabox-pipelines"
              traits:
              - gitHubBranchDiscovery:
                  strategyId: 1
              - gitHubPullRequestDiscovery:
                  strategyId: 1
              - gitHubForkDiscovery:
                  strategyId: 1
                  trust: "gitHubTrustPermissions"
